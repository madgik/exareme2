name: Publish images

on:
  release:
    types: [published]

env:
  DOCKERHUB_ORG: madgik
  HARBOR_REGISTRY: docker-registry.ebrains.eu
  HARBOR_NAMESPACE: medical-informatics-platform

jobs:
  build-and-push:
    name: Build & push (${{ matrix.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: MONETDB
            file: monetdb/Dockerfile
            image_basename: exareme2_db
            cache_scope: exareme2_db
            hashpaths: monetdb/**
          - name: MIPDB
            file: mipdb/Dockerfile
            image_basename: exareme2_mipdb
            cache_scope: exareme2_mipdb
            hashpaths: mipdb/**
          - name: RABBITMQ
            file: rabbitmq/Dockerfile
            image_basename: exareme2_rabbitmq
            cache_scope: exareme2_rabbitmq
            hashpaths: rabbitmq/**
          - name: CONTROLLER
            file: exareme2/controller/Dockerfile
            image_basename: exareme2_controller
            cache_scope: exareme2_controller
            hashpaths: exareme2/**
          - name: WORKER
            file: exareme2/worker/Dockerfile
            image_basename: exareme2_worker
            cache_scope: exareme2_worker
            hashpaths: exareme2/**

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Log in to EBRAINS Harbor
      - name: Log in to EBRAINS HARBOR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      # Compose the two image names (Docker Hub + Harbor)
      - name: Set image names
        id: names
        run: |
          echo "IMAGE_DH=${{ env.DOCKERHUB_ORG }}/${{ matrix.image_basename }}" >> $GITHUB_OUTPUT
          echo "IMAGE_HR=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_NAMESPACE }}/${{ matrix.image_basename }}" >> $GITHUB_OUTPUT

      # Automatically generate tags & labels from the release tag
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.names.outputs.IMAGE_DH }}
            ${{ steps.names.outputs.IMAGE_HR }}
          # Use the release tag as-is, and also a "sanitized" variant without a leading 'v'
          # plus "latest" for convenience.
          tags: |
            type=ref,event=tag
            type=raw,value={{tag}},enable=true
            type=raw,value={{tag}},prefix=,suffix=,enable=false
            type=raw,value={{version}},enable=true
            type=raw,value=latest,enable=true
          flavor: |
            latest=true

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Enable GHA cache (no manual move/rename needed)
          cache-from: type=gha,scope=${{ matrix.cache_scope }}
          cache-to: type=gha,mode=max,scope=${{ matrix.cache_scope }}
          # Uncomment for multi-arch
          # platforms: linux/amd64,linux/arm64

      # Optional: only rebuild when relevant paths change (speeds things up)
      # You can uncomment this block to skip builds if nothing changed for a component
      # - name: Skip if component paths unchanged
      #   if: ${{ hashFiles(matrix.hashpaths) == '' }}
      #   run: echo "No changes detected for ${{ matrix.name }}; skipping."

# --- Optional: MONETDB base image (kept disabled as in your original) ---
#  build-and-push-monetdb-base:
#    name: Build MONETDB base image
#    runs-on: ubuntu-latest
#    if: false  # keep disabled
#    steps:
#      - uses: actions/checkout@v4
#      - uses: docker/setup-buildx-action@v3
#      - uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - uses: docker/build-push-action@v6
#        with:
#          context: .
#          file: monetdb/DockerfileBaseImage
#          push: true
#          tags: madgik/exareme2_db_base:latest
