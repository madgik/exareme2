{{ if gt .Values.localnodes 1.0}} # Single node deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mipengine-globalnode-deployment
  labels:
    app: mipengine-node
    nodeType: globalnode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mipengine-node
  template:
    metadata:
      labels:
        app: mipengine-node
        nodeType: globalnode
    spec:
      nodeSelector:
        master: "true"
      volumes:
      - name: db-data
        hostPath:
          path: {{ .Values.db.storage_location }}
      containers:
      - name: monetdb
        image: {{ .Values.mipengine_images.repository }}/mipenginedb:{{ .Values.mipengine_images.version }}
        resources:
          limits:
            memory: "{{ .Values.db.max_memory }}Mi"
        env:
        - name: LOG_LEVEL
          value: {{ .Values.log_level }}
        - name: MONETDB_NCLIENTS
          value: {{ mul .Values.max_concurrent_experiments .Values.localnodes | quote }}
        - name: SOFT_RESTART_MEMORY_LIMIT
          value: {{ div  (mul .Values.db.max_memory .Values.db.percentage_soft_memory_limit) 100 | quote }}
        - name: HARD_RESTART_MEMORY_LIMIT
          value: {{ div  (mul .Values.db.max_memory .Values.db.percentage_hard_memory_limit) 100 | quote }}
        ports:
          - containerPort: 50000
        volumeMounts:
        - mountPath: /home/monetdb
          name: db-data
        livenessProbe:
          exec:
            command:
            - mclient
            - db
            - -s
            - "select name from sys.tables;"
          initialDelaySeconds: 30
          periodSeconds: 30

      - name: rabbitmq
        image: {{ .Values.mipengine_images.repository }}/mipengine_rabbitmq:{{ .Values.mipengine_images.version }}
        env:
        - name: RABBITMQ_ADMIN_USER
          value: "user"
        - name: RABBITMQ_ADMIN_PASSWORD
          value: "password"
        - name: RABBITMQ_ADMIN_VHOST
          value: "user_vhost"
        - name: RABBITMQ_SLEEP_BEFORE_CONFIGURATION
          value: "30"
        ports:
          - containerPort: 5672
        livenessProbe:
          exec:
            command:
              - rabbitmq-diagnostics
              - -q
              - check_port_connectivity
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10

      - name: node
        image: {{ .Values.mipengine_images.repository }}/mipengine_node:{{ .Values.mipengine_images.version }}
        env:
        - name: NODE_IDENTIFIER
          value: "globalnode"
        - name: NODE_ROLE
          value: "GLOBALNODE"
        - name: LOG_LEVEL
          value: {{ .Values.log_level }}
        - name: FRAMEWORK_LOG_LEVEL
          value: {{ .Values.framework_log_level }}
        - name: CELERY_TASKS_TIMEOUT
          value: {{ quote .Values.controller.celery_tasks_timeout }}
        - name: RABBITMQ_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: RABBITMQ_PORT
          value: "5672"
        - name: MONETDB_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MONETDB_PORT
          value: "50000"
        - name: MONETDB_PASSWORD
          value: "executor"
        - name: SMPC_ENABLED
          value: {{ quote .Values.smpc.enabled }}
        {{ if .Values.smpc.enabled }}
        - name: SMPC_OPTIONAL
          value: {{ quote .Values.smpc.optional }}
        - name: SMPC_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SMPC_COORDINATOR_IP
          value: mipengine-smpc-coordinator-service
        - name: SMPC_COORDINATOR_ADDRESS
          value: "http://$(SMPC_COORDINATOR_IP):12314"
        {{ end }}
{{end}}
