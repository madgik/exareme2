apiVersion: apps/v1
kind: Deployment
metadata:
  name: mipengine-localnode-deployment
  labels:
    app: mipengine-node
    nodeType: localnode
spec:
  replicas: {{ .Values.localnodes }}
  selector:
    matchLabels:
      app: mipengine-node
  template:
    metadata:
      labels:
        app: mipengine-node
        nodeType: localnode
    spec:
      nodeSelector:
        nodeType: worker
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mipengine-node
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: db-data
        hostPath:
          path: {{ .Values.monetdb_storage }}
      - name: csv-data
        hostPath:
          path: {{ .Values.csvs_datapath }}
      containers:
      - name: monetdb
        image: {{ .Values.mipengine_images.repository }}/mipenginedb:{{ .Values.mipengine_images.version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_LEVEL
          value: {{ .Values.log_level }}
        ports:
          - containerPort: 50000
        volumeMounts:
        - mountPath: /home/monetdb
          name: db-data

      - name: db-importer
        image: {{ .Values.mipengine_images.repository }}/mipengine_mipdb:{{ .Values.mipengine_images.version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DB_PORT
          value: "50000"
        volumeMounts:
        - mountPath: /opt/data
          name: csv-data

      - name: rabbitmq
        image: {{ .Values.mipengine_images.repository }}/mipengine_rabbitmq:{{ .Values.mipengine_images.version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: RABBITMQ_ADMIN_USER
          value: "user"
        - name: RABBITMQ_ADMIN_PASSWORD
          value: "password"
        - name: RABBITMQ_ADMIN_VHOST
          value: "user_vhost"
        - name: RABBITMQ_SLEEP_BEFORE_CONFIGURATION
          value: "30"
        ports:
          - containerPort: 5672

      - name: node
        image: {{ .Values.mipengine_images.repository }}/mipengine_node:{{ .Values.mipengine_images.version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_IDENTIFIER
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_ROLE
          value: "LOCALNODE"
        - name: LOG_LEVEL
          value: {{ .Values.log_level }}
        - name: FRAMEWORK_LOG_LEVEL
          value: {{ .Values.framework_log_level }}
        - name: RABBITMQ_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: RABBITMQ_PORT
          value: "5672"
        - name: MONETDB_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MONETDB_PORT
          value: "50000"
        - name: SMPC_ENABLED
          value: {{ quote .Values.smpc.enabled }}
        {{ if .Values.smpc.enabled }}
        - name: SMPC_OPTIONAL
          value: {{ quote .Values.smpc.optional }}
        - name: SMPC_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SMPC_CLIENT_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SMPC_CLIENT_ADDRESS
          value: "http://$(SMPC_CLIENT_IP)9000"
        {{ end }}

      {{ if .Values.smpc.enabled }}
      - name: smpc-client
        image: {{ .Values.smpc.image }}
        imagePullPolicy: IfNotPresent
        command: ["python", "client.py"]
        ports:
          - containerPort: 9000
        env:
        - name: ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PORT
          value: "9000"
        - name: COORDINATOR_IP
          value: mipengine-smpc-coordinator-service
        - name: COORDINATOR_URL
          value: "http://$(COORDINATOR_IP):12314"
        - name: PLAYER_IP_0
          value: mipengine-smpc-player0-service
        - name: PLAYER_REPO_0
          value: "http://$(PLAYER_IP_0):7000"
        - name: PLAYER_IP_1
          value: mipengine-smpc-player1-service
        - name: PLAYER_REPO_1
          value: "http://$(PLAYER_IP_1):7001"
        - name: PLAYER_IP_2
          value: mipengine-smpc-player2-service
        - name: PLAYER_REPO_2
          value: "http://$(PLAYER_IP_2):7002"
      {{ end }}

#---  # Used for SMPC cluster debugging
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: mipengine-node-service
#spec:
#  type: LoadBalancer
#  selector:
#    app: mipengine-node
#  ports:
#    - protocol: TCP
#      port: 9000
#      targetPort: 9000
#      nodePort: 32000
