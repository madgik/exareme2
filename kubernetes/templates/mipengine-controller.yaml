apiVersion: apps/v1
kind: Deployment
metadata:
  name: mipengine-controller-deployment
  labels:
    app: mipengine-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mipengine-controller
  template:
    metadata:
      labels:
        app: mipengine-controller
    spec:
      nodeSelector:
        master: "true"
      volumes:
      - name: cleanup-file
        hostPath:
          path: {{ .Values.controller.cleanup_file_folder }}
      containers:
      - name: controller
        image: {{ .Values.mipengine_images.repository }}/mipengine_controller:{{ .Values.mipengine_images.version }}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5000
        volumeMounts:
        - mountPath: /opt/cleanup
          name: cleanup-file
        env:
        - name: LOG_LEVEL
          value: {{ .Values.log_level }}
        - name: FRAMEWORK_LOG_LEVEL
          value: {{ .Values.framework_log_level }}
        - name: DEPLOYMENT_TYPE
          value: "KUBERNETES"
        - name: NODE_LANDSCAPE_AGGREGATOR_UPDATE_INTERVAL
          value: {{ quote .Values.controller.node_landscape_aggregator_update_interval }}
        - name: NODES_CLEANUP_INTERVAL
          value: {{ quote .Values.controller.nodes_cleanup_interval }}
        - name: NODES_CLEANUP_CONTEXTID_RELEASE_TIMELIMIT
          value: "86400"  # One day in seconds
        - name: CELERY_TASKS_TIMEOUT
          value: {{ quote .Values.controller.celery_tasks_timeout }}
        - name: LOCALNODES_DNS
          value: "mipengine-nodes-service"
        - name: LOCALNODES_PORT
          value: "5672"
        - name: SMPC_ENABLED
          value: {{ quote .Values.smpc.enabled }}
        {{ if .Values.smpc.enabled }}
        - name: SMPC_OPTIONAL
          value: {{ quote .Values.smpc.optional }}
        - name: SMPC_COORDINATOR_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SMPC_COORDINATOR_ADDRESS
          value: "http://$(SMPC_COORDINATOR_IP):12314"
        - name: SMPC_GET_RESULT_INTERVAL
          value: {{ quote .Values.smpc.get_result_interval }}
        - name: SMPC_GET_RESULT_MAX_RETRIES
          value: {{ quote .Values.smpc.get_result_max_retries }}
        {{ end }}

      ### --- SMPC components ---
      {{ if .Values.smpc.enabled }}
      - name: smpc-db
        image: {{ .Values.smpc.db_image}}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "sysadmin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "123qwe"

      - name: smpc-queue
        image: {{ .Values.smpc.queue_image}}
        imagePullPolicy: IfNotPresent
        command: ["redis-server", "--requirepass", "agora"]
        ports:
          - containerPort: 6379
        env:
          - name: REDIS_REPLICATION_MODE
            value: "master"

      - name: smpc-coordinator
        image: {{ .Values.smpc.image }}
        imagePullPolicy: IfNotPresent
        command: ["python", "coordinator.py"]
        ports:
          - containerPort: 12314
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DB_URL
          value: "$(POD_IP):27017"
        - name: DB_UNAME
          value: "sysadmin"
        - name: DB_PSWD
          value: "123qwe"
        - name: REDIS_HOST
          value: "$(POD_IP)"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PSWD
          value: "agora"
        - name: PLAYER_IP_0
          value: mipengine-smpc-player0-service
        - name: PLAYER_REPO_0
          value: "http://$(PLAYER_IP_0):7000"
        - name: PLAYER_IP_1
          value: mipengine-smpc-player1-service
        - name: PLAYER_REPO_1
          value: "http://$(PLAYER_IP_1):7001"
        - name: PLAYER_IP_2
          value: mipengine-smpc-player2-service
        - name: PLAYER_REPO_2
          value: "http://$(PLAYER_IP_2):7002"
      {{ end }}

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-controller-service
spec:
  type: LoadBalancer
  selector:
    app: mipengine-controller
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30000

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-nodes-service
spec:
  clusterIP: None
  selector:
    app: mipengine-node
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672


{{ if .Values.smpc.enabled }}
---

### --- SMPC Coordinator Service ---
apiVersion: v1
kind: Service
metadata:
  name: mipengine-smpc-coordinator-service
spec:
  type: LoadBalancer
  selector:
    app: mipengine-controller
  ports:
    - protocol: TCP
      port: 12314
      targetPort: 12314
#      nodePort: 31000  # Used for SMPC cluster debugging


### --- SMPC Coordinator DB ---

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-smpc-coordinator-db-service
spec:
  selector:
    app: mipengine-controller
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017


### --- SMPC Player Pods ---
---
apiVersion: v1
kind: Pod
metadata:
  name: mipengine-smpc-player0
  labels:
    app: mipengine-smpc-players
    smpc_player: player0
spec:
  nodeSelector:
    smpc_player: "true"
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - mipengine-smpc-players
        topologyKey: "kubernetes.io/hostname"
  containers:
  - name: smpc-player
    image: {{ .Values.smpc.image}}
    imagePullPolicy: IfNotPresent
    command: ["python", "player.py", "0"]
    ports:
      - containerPort: 6000
      - containerPort: 7000
      - containerPort: 14000
    env:
    - name: COORDINATOR_IP
      value: mipengine-smpc-coordinator-service
    - name: COORDINATOR_URL
      value: "http://$(COORDINATOR_IP):12314"
    - name: DB_IP
      value: mipengine-smpc-coordinator-db-service
    - name: DB_URL
      value: "$(DB_IP):27017"
    - name: DB_UNAME
      value: "sysadmin"
    - name: DB_PSWD
      value: "123qwe"
    - name: PLAYER_IP_0
      value: mipengine-smpc-player0-service
    - name: PLAYER_REPO_0
      value: "http://$(PLAYER_IP_0):7000"
    - name: PLAYER_IP_1
      value: mipengine-smpc-player1-service
    - name: PLAYER_REPO_1
      value: "http://$(PLAYER_IP_1):7001"
    - name: PLAYER_IP_2
      value: mipengine-smpc-player2-service
    - name: PLAYER_REPO_2
      value: "http://$(PLAYER_IP_2):7002"

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-smpc-player0-service
spec:
  selector:
    smpc_player: player0
  ports:
    - name: port-6000
      protocol: TCP
      port: 6000
      targetPort: 6000
    - name: port-7000
      protocol: TCP
      port: 7000
      targetPort: 7000
    - name: port-14000
      protocol: TCP
      port: 14000
      targetPort: 14000

---

apiVersion: v1
kind: Pod
metadata:
  name: mipengine-smpc-player1
  labels:
    app: mipengine-smpc-players
    smpc_player: player1
spec:
  nodeSelector:
    smpc_player: "true"
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - mipengine-smpc-players
        topologyKey: "kubernetes.io/hostname"
  containers:
  - name: smpc-player
    image: {{ .Values.smpc.image}}
    imagePullPolicy: IfNotPresent
    command: ["python", "player.py", "1"]
    ports:
      - containerPort: 6001
      - containerPort: 7001
      - containerPort: 14001
    env:
    - name: COORDINATOR_IP
      value: mipengine-smpc-coordinator-service
    - name: COORDINATOR_URL
      value: "http://$(COORDINATOR_IP):12314"
    - name: DB_IP
      value: mipengine-smpc-coordinator-db-service
    - name: DB_URL
      value: "$(DB_IP):27017"
    - name: DB_UNAME
      value: "sysadmin"
    - name: DB_PSWD
      value: "123qwe"
    - name: PLAYER_IP_0
      value: mipengine-smpc-player0-service
    - name: PLAYER_REPO_0
      value: "http://$(PLAYER_IP_0):7000"
    - name: PLAYER_IP_1
      value: mipengine-smpc-player1-service
    - name: PLAYER_REPO_1
      value: "http://$(PLAYER_IP_1):7001"
    - name: PLAYER_IP_2
      value: mipengine-smpc-player2-service
    - name: PLAYER_REPO_2
      value: "http://$(PLAYER_IP_2):7002"

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-smpc-player1-service
spec:
  selector:
    smpc_player: player1
  ports:
    - name: port-6001
      protocol: TCP
      port: 6001
      targetPort: 6001
    - name: port-7001
      protocol: TCP
      port: 7001
      targetPort: 7001
    - name: port-14001
      protocol: TCP
      port: 14001
      targetPort: 14001

---

apiVersion: v1
kind: Pod
metadata:
  name: mipengine-smpc-player2
  labels:
    app: mipengine-smpc-players
    smpc_player: player2
spec:
  nodeSelector:
    smpc_player: "true"
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - mipengine-smpc-players
        topologyKey: "kubernetes.io/hostname"
  containers:
  - name: smpc-player
    image: {{ .Values.smpc.image}}
    imagePullPolicy: IfNotPresent
    command: ["python", "player.py", "2"]
    ports:
      - containerPort: 6002
      - containerPort: 7002
      - containerPort: 14002
    env:
    - name: COORDINATOR_IP
      value: mipengine-smpc-coordinator-service
    - name: COORDINATOR_URL
      value: "http://$(COORDINATOR_IP):12314"
    - name: DB_IP
      value: mipengine-smpc-coordinator-db-service
    - name: DB_URL
      value: "$(DB_IP):27017"
    - name: DB_UNAME
      value: "sysadmin"
    - name: DB_PSWD
      value: "123qwe"
    - name: PLAYER_IP_0
      value: mipengine-smpc-player0-service
    - name: PLAYER_REPO_0
      value: "http://$(PLAYER_IP_0):7000"
    - name: PLAYER_IP_1
      value: mipengine-smpc-player1-service
    - name: PLAYER_REPO_1
      value: "http://$(PLAYER_IP_1):7001"
    - name: PLAYER_IP_2
      value: mipengine-smpc-player2-service
    - name: PLAYER_REPO_2
      value: "http://$(PLAYER_IP_2):7002"

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-smpc-player2-service
spec:
  selector:
    smpc_player: player2
  ports:
    - name: port-6002
      protocol: TCP
      port: 6002
      targetPort: 6002
    - name: port-7002
      protocol: TCP
      port: 7002
      targetPort: 7002
    - name: port-14002
      protocol: TCP
      port: 14002
      targetPort: 14002
{{ end }}
